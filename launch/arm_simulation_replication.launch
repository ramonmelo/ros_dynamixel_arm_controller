<launch>

	<!-- Servor Driver -->
	<node name="dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">
		<rosparam file="$(find dynamixel_arm_controller)/config/connection_cfg.yaml" command="load"/>
	</node>

	<!-- Config -->
	<rosparam file="$(find dynamixel_arm_controller)/config/hand_motor_cfg.yaml" command="load"/>

	<!-- Description of robot for RVIZ -->
	<param name="robot_description" textfile="$(find dynamixel_arm_controller)/urdf/dynamixel.urdf" />
	<!-- <param name="use_gui" value="True"/> -->

	<!-- Show Joint Sliders -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<rosparam param="source_list">["hand_joint_states"]</rosparam>
	</node>
	<!-- Publisher for Transformations -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

	<!-- RVIZ -->
	<!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find dynamixel_arm_controller)/urdf.rviz" /> -->

	<!-- Spawner of servo topics -->
	<node name="controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
		  args="--manager=dxl_manager --port pan_tilt_port hand_to_grip bone_to_hand1 bone_to_hand2 base_to_bone1 base_to_bone2 base grip"
		  output="screen"/>

	<!-- Hand controller -->
	<node name="hand_publisher" pkg="dynamixel_arm_controller" type="hand_publisher.py">
		<rosparam param="hand_positions" file="$(find dynamixel_arm_controller)/config/hand_positions_cfg.yaml" command="load"/>
		<rosparam param="hand_mapping" file="$(find dynamixel_arm_controller)/config/hand_mapping_cfg.yaml" command="load"/>
		<rosparam param="hand_current_position">initial_pos</rosparam>
	</node>
</launch>
